}
get_spec <-  function(conf_mat) {
conf_mat[1, 1] / sum(conf_mat[, 1])
}
confusion_mat <- make_conf_mat(sruv_tst_pred, ptitanic_tst$survived)
(misclass_rate <- mean(sruv_tst_pred != ptitanic_tst$survived))
(sensitivity <- get_sens(confusion_mat))
(specificity <- get_spec(confusion_mat))
library(readr)
wisc_train <- read_csv("./wisc-train.csv")
wisc_test <- read_csv("./wisc-test.csv")
#is.factor(wisc_train$)
setwd("C:/work/code/STAT420StatisticalModeling/week10/hw")
library(readr)
wisc_train <- read_csv("./wisc-train.csv")
wisc_test <- read_csv("./wisc-test.csv")
#is.factor(wisc_train$)
is.factor(wisc_train$class)
head(wisc_train)
wisc_train$class <- as.factor(wisc_train$class)
head(wisc_train$class)
head(wisc_train)
wisc_add <- glm(class ~ radius + smoothness + texture,
data = wisc_train, family = binomial)
wisc_big <- glm(class ~ .^2,
data = wisc_train, family = binomial)
wisc_add_3 <- glm(class ~ radius + smoothness + texture,
data = wisc_train, family = binomial)
wisc_add_all <- glm(class ~ .,
data = wisc_train, family = binomial)
wisc_big <- glm(class ~ . ^ 2,
data = wisc_train, family = binomial)
wisc_big
wisc_aic <- step(wisc_big, direction = "backward",
trace = 0)
wisc_aic
(wisc_add_3_rt <- cv.glm(wisc_train, wisc_add_3, K = 5)$delta[1])
(wisc_add_all_rt <- cv.glm(wisc_train, wisc_add_all, K = 5)$delta[1])
(wisc_aic <- cv.glm(wisc_train, wisc_aic, K = 5)$delta[1])
library(boot)
(wisc_add_3_rt <- cv.glm(wisc_train, wisc_add_3, K = 5)$delta[1])
(wisc_add_all_rt <- cv.glm(wisc_train, wisc_add_all, K = 5)$delta[1])
(wisc_aic <- cv.glm(wisc_train, wisc_aic, K = 5)$delta[1])
wisc_add_3 <- glm(class ~ radius + smoothness + texture,
data = wisc_train, family = binomial)
wisc_add_all <- glm(class ~ .,
data = wisc_train, family = binomial)
wisc_big <- glm(class ~ . ^ 2,
data = wisc_train, family = binomial)
wisc_aic <- step(wisc_big, direction = "backward",
trace = 0)
library(boot)
(wisc_add_3_rt <- cv.glm(wisc_train, wisc_add_3, K = 5)$delta[1])
(wisc_add_all_rt <- cv.glm(wisc_train, wisc_add_all, K = 5)$delta[1])
(wisc_aic <- cv.glm(wisc_train, wisc_aic, K = 5)$delta[1])
confusion_mat
sum(sruv_tst_pred == ptitanic_tst$survived)
349 + 164
sruv_tst_pred[sruv_tst_pred == "survived", ]
sruv_tst_pred[sruv_tst_pred == "survived"]
sruv_tst_pred[sruv_tst_pred == "survived"] == ptitanic_tst[ptitanic_tst$survived, "survived"]
sruv_tst_pred[sruv_tst_pred == "survived"] ==
1
ptitanic_tst[ptitanic_tst$survived, "survived"]
p_pred <- sruv_tst_pred[sruv_tst_pred == "survived"]
p_pred
n_pred <- sruv_tst_pred[sruv_tst_pred == "died"]
length(sruv_tst_pred)
length(p_pred) + length(n_pred)
ptitanic_tst[ptitanic_tst$survived == "survived"]$survived
ptitanic_tst[ptitanic_tst$survived == "survived",]$survived
length(p_actual) + length(n_actual)
p_pred <- sruv_tst_pred[sruv_tst_pred == "survived"]
n_pred <- sruv_tst_pred[sruv_tst_pred == "died"]
p_actual <- ptitanic_tst[ptitanic_tst$survived == "survived",]$survived
n_actual <- ptitanic_tst[ptitanic_tst$survived == "died",]$survived
length(p_actual) + length(n_actual)
ifelse(predict(model_2a, ptitanic_tst, type = "response") > 0.5,
"survived",
"died")
ifelse(predict(model_2a, ptitanic_tst, type = "response") > c(0.5, 0.1),
"survived",
"died")
dim(tests)
tests <- ifelse(predict(model_2a, ptitanic_tst, type = "response") > c(0.5, 0.1),
"survived",
"died")
dim(tests)
nrows(tests)
nrow(tests)
length(tests)
cutoffs = seq(0.01, 0.99, by = 0.01)
length(cutoffs)
num_cutoffs<- length(cutoffs)
specificity_values <- rep(0, num_cutoffs)
head(wisc_test)
num_cutoffs<- length(cutoffs)
specificity_values <- rep(0, num_cutoffs)
simplicity_values <- rep(0, num_cutoffs)
for (i in 1:num_cutoffs) {
classifier_pred <- ifelse(predict(
wisc_add_all, wisc_test, type = "response") > cutoffs[i],
"M", "B")
confusion_mat <- make_conf_mat(classifier_pred, wisc_test$class)
(sensitivity_values[i] <- get_sens(confusion_mat))
(specificity_values[i] <- get_spec(confusion_mat))
}
num_cutoffs<- length(cutoffs)
sensitivity_values <- rep(0, num_cutoffs)
specificity_values <- rep(0, num_cutoffs)
for (i in 1:num_cutoffs) {
classifier_pred <- ifelse(predict(
wisc_add_all, wisc_test, type = "response") > cutoffs[i],
"M", "B")
confusion_mat <- make_conf_mat(classifier_pred, wisc_test$class)
(sensitivity_values[i] <- get_sens(confusion_mat))
(specificity_values[i] <- get_spec(confusion_mat))
}
sensitivity_values
specificity_values
lines(cutoffs, sensitivity_values, col = "darkorange", lwd = 2)
?lines
lines(cutoffs, sensitivity_values,
col = "darkorange", lwd = 2, add = FALSE)
plot(cutoffs, sensitivity_values,
col = "darkorange", lwd = 2, add = FALSE)
plot(cutoffs, sensitivity_values,
col = "darkorange", lwd = 2)
plot(cutoffs, sensitivity_values,
col = "darkorange", lwd = 2, type="l")
plot(cutoffs, sensitivity_values,
col = "darkorange", lwd = 5, type="l")
plot(cutoffs, sensitivity_values,
col = "darkorange", lwd = 2, type="l")
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
col = "darkorange", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
col = "darkorange", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "dodgerblue", lwd = 2)
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff"
col = "darkorange", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "dodgerblue", lwd = 2)
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
col = "darkorange", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "dodgerblue", lwd = 2)
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "darkorange", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "dodgerblue", lwd = 2)
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("topleft", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 3,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("topleft", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("midleft", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("center", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
grid()
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
grid()
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
grid()
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
grid()
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2,
pch=15, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
grid()
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2,
pch=15, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2,
pch=15, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2,
pch=15, type="b")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
col = "deepskyblue3", lwd = 2,
pch=15, type="lb")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
panel.first = grid(),
col = "deepskyblue3", lwd = 2,
pch=15, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
model_2a
model_2a <- glm(survived ~ pclass + age + pclass*age, data = ptitanic_trn,
family = binomial)
(model_2a$deviance)
model_2a
model_2a <- glm(survived ~ pclass + sex + pclass:age, data = ptitanic_trn,
family = binomial)
(model_2a$deviance)
model_2a
model_2a <- glm(survived ~ pclass + sex + sex:age, data = ptitanic_trn,
family = binomial)
(model_2a$deviance)
model_2a
model_2a <- glm(survived ~ pclass + sex:age, data = ptitanic_trn,
family = binomial)
(model_2a$deviance)
model_2a
model_2a <- glm(survived ~ pclass + sex + sex:age, data = ptitanic_trn,
family = binomial)
(model_2a$deviance)
model_2a
model_2b <- glm(survived ~ sex + sex:age, data = ptitanic_trn,
family = binomial)
(test_stat <- anova(model_2b, model_2a, test = "LRT")[2, "Deviance"])
model_2b
(pvalue <- anova(model_2b, model_2a, test = "LRT")[2, "Pr(>Chi)"])
stat_decide <- function(p_value, alpha = 0.01) {
ifelse(p_value < alpha, "Reject the Null Hypothesis", "FTR the Null Hypothesis")
}
stat_decide(pvalue)
(pvalue <- anova(model_2b, model_2a, test = "LRT")[2, "Pr(>Chi)"])
model_2c <- glm(survived ~ pclass + sex + age,
data = ptitanic_trn, family = binomial)
anova_2c <- anova(model_2a, model_2c, test = "LRT")
model_2c
model_2a
model_2a
is.factor(ptitanic_trn$sex)
is.factor(ptitanic_trn$pclass)
is.factor(ptitanic_trn$age)
model_2a <- glm(survived ~ pclass + sex + age + sex:age, data = ptitanic_trn,
family = binomial)
(model_2a$deviance)
model_2a
model_2a <- glm(survived ~ pclass + sex + age + sex:age,
data = ptitanic_trn,
family = binomial)
(model_2a$deviance)
model_2a
model_2b <- glm(survived ~ sex + sex:age, data = ptitanic_trn,
family = binomial)
(test_stat <- anova(model_2b, model_2a, test = "LRT")[2, "Deviance"])
model_2b
model_2b <- glm(survived ~ sex + age + sex:age, data = ptitanic_trn,
family = binomial)
(test_stat <- anova(model_2b, model_2a, test = "LRT")[2, "Deviance"])
model_2b
model_2a
model_2b
model_2b <- glm(survived ~ sex + age + sex:age, data = ptitanic_trn,
family = binomial)
(test_stat <- anova(model_2b, model_2a, test = "LRT")[2, "Deviance"])
(pvalue <- anova(model_2b, model_2a, test = "LRT")[2, "Pr(>Chi)"])
stat_decide <- function(p_value, alpha = 0.01) {
ifelse(p_value < alpha, "Reject the Null Hypothesis", "FTR the Null Hypothesis")
}
stat_decide(pvalue)
model_2c <- glm(survived ~ pclass + sex + age,
data = ptitanic_trn, family = binomial)
anova_2c <- anova(model_2a, model_2c, test = "LRT")
model_2c
model_2a
model_2b <- glm(survived ~ sex + age + sex:age, data = ptitanic_trn,
family = binomial)
(test_stat <- anova(model_2a, model_2b, test = "LRT")[2, "Deviance"])
(pvalue <- anova(model_2b, model_2a, test = "LRT")[2, "Pr(>Chi)"])
stat_decide <- function(p_value, alpha = 0.01) {
ifelse(p_value < alpha, "Reject the Null Hypothesis", "FTR the Null Hypothesis")
}
stat_decide(pvalue)
anova(model_2a, model_2b, test = "LRT")
anova(model_2b, model_2a, test = "LRT")
model_2b <- glm(survived ~ sex + age + sex:age, data = ptitanic_trn,
family = binomial)
(test_stat <- anova(model_2b, model_2a, test = "LRT")[2, "Deviance"])
(pvalue <- anova(model_2b, model_2a, test = "LRT")[2, "Pr(>Chi)"])
stat_decide <- function(p_value, alpha = 0.01) {
ifelse(p_value < alpha, "Reject the Null Hypothesis", "FTR the Null Hypothesis")
}
stat_decide(pvalue)
model_2b <- glm(survived ~ sex + age + sex:age, data = ptitanic_trn,
family = binomial)
(test_stat <- anova(model_2b, model_2a, test = "LRT")[2, "Deviance"])
(pvalue <- anova(model_2b, model_2a, test = "LRT")[2, "Pr(>Chi)"])
stat_decide <- function(p_value, alpha = 0.01) {
ifelse(p_value < alpha, "Reject the Null Hypothesis", "FTR the Null Hypothesis")
}
stat_decide(pvalue)
stat_decide <- function(p_value, alpha = 0.01) {
ifelse(p_value < alpha, "Reject the Null Hypothesis", "FTR the Null Hypothesis")
}
stat_decide(pvalue)
model_2c <- glm(survived ~ pclass + sex + age,
data = ptitanic_trn, family = binomial)
anova_2c <- anova(model_2a, model_2c, test = "LRT")
model_2c
anova_2c
model_2c <- glm(survived ~ pclass + sex + age,
data = ptitanic_trn, family = binomial)
anova_2c <- anova(model_2c, model_2a, test = "LRT")
anova_2c
anova_2c
model_2c
model_2c$coefficients
summary(model_2c)$coefficients
summary(model_2a)$coefficients
anova_2c
sqrt(11.4)
-3.20122^2
(-3.20122)^2
model_2c <- glm(survived ~ pclass + sex + age,
data = ptitanic_trn, family = binomial)
anova_2c <- anova(model_2c, model_2a, test = "LRT")
(test_stat <- anova_2c[2, "Deviance"])
(pvalue <- anova_2c[2, "Pr(>Chi)"])
stat_decide(pvalue)
num_cutoffs<- length(cutoffs)
sensitivity_values <- rep(0, num_cutoffs)
specificity_values <- rep(0, num_cutoffs)
for (i in 1:num_cutoffs) {
classifier_pred <- ifelse(predict(
wisc_add_all, wisc_test, type = "response") > cutoffs[i],
"M", "B")
confusion_mat <- make_conf_mat(classifier_pred, wisc_test$class)
(sensitivity_values[i] <- get_sens(confusion_mat))
(specificity_values[i] <- get_spec(confusion_mat))
}
par(mfrow=c(1, 1), bg="ghostwhite")
plot(cutoffs, sensitivity_values,
main = "Sensitivity and Specificity tradeoff",
xlab = "Cutoff values",
ylab = "",
panel.first = grid(),
col = "deepskyblue3", lwd = 2,
pch=15, type="l")
lines(cutoffs, specificity_values,
col = "darkorange", lwd = 2)
legend("left", c("Sensitivity", "Specificity"),
lty = c(1, 1),
lwd = 2,
col = c("deepskyblue3", "darkorange"))
pvalue
fr(pvalue)
View(wisc_train)
wisc_add_3_rt
wisc_add_all_rt
wisc_aic
wisc_add_3 <- glm(class ~ radius + smoothness + texture,
data = wisc_train, family = binomial)
wisc_add_all <- glm(class ~ .,
data = wisc_train, family = binomial)
wisc_big <- glm(class ~ . ^ 2,
data = wisc_train, family = binomial)
wisc_aic <- step(wisc_big, direction = "backward",
trace = 0)
library(boot)
(wisc_add_3_rt <- cv.glm(wisc_train, wisc_add_3, K = 5)$delta[1])
(wisc_add_all_rt <- cv.glm(wisc_train, wisc_add_all, K = 5)$delta[1])
(wisc_aic_rt <- cv.glm(wisc_train, wisc_aic, K = 5)$delta[1])
