graph_1a()
# Chunk 10
(mod_1b <- lm(CO2 ~ horse + type, data = epadata))
# Chunk 11
graph_1a()
cofs <- mod_1b$coefficients
intercept_both <- cofs[1]
intercept_car <- cofs[1] + cofs[3]
intercept_truck <- cofs[1] + cofs[4]
slope <- cofs[2]
abline(intercept_both, slope, col = plot_colors[1], lty = 1, lwd = 2)
abline(intercept_car, slope, col = plot_colors[2], lty = 2, lwd = 2)
abline(intercept_truck, slope, col = plot_colors[3], lty = 2, lwd = 2)
r_2 <- summary(mod_1b)$r.squared
# Chunk 12
(pred_1b <- predict(mod_1b, level = 0.9,
newdata = data.frame(
horse = 148,
type = "Both"),
interval = "prediction"))
# Chunk 13
graph_1a()
# Chunk 14
(mod_1c <- lm(CO2 ~ horse * type, data = epadata))
# Chunk 15
graph_1a()
cofs <- mod_1c$coefficients
intercept_both <- cofs[1]
intercept_car <- cofs[1] + cofs[3]
intercept_truck <- cofs[1] + cofs[4]
slope_both <- cofs[2]
slope_car <- cofs[2] + cofs[5]
slope_truck <- cofs[2] + cofs[6]
abline(intercept_both, slope_both, col = plot_colors[1], lty = 1, lwd = 2)
abline(intercept_car, slope_car, col = plot_colors[2], lty = 2, lwd = 2)
abline(intercept_truck, slope_truck, col = plot_colors[3], lty = 2, lwd = 2)
r_2 <- summary(mod_1c)$r.squared
# Chunk 16
(pred_1c <- predict(mod_1c, level = 0.9,
newdata = data.frame(
horse = 148,
type = "Both"),
interval = "prediction"))
anova_1d <- anova(mod_1b, mod_1c)
stat_decide(anova_1d[2, "Pr(>F)"], 0.1)
anova_1d
summary(anova_1d)
plot_colors <- c("Darkorange", "darkgrey", "dodgerblue")
graph_1a <- function() {
plot(CO2 ~ horse, data = epadata,
col = plot_colors[type],
pch = as.numeric(type),
main = "CO2 vs Horse Power by Vehicle Type"
cex = 2)
legend("topright", levels(epadata$type),
col = plot_colors, pch = c(1, 2, 3))
}
graph_1a()
plot_colors <- c("Darkorange", "darkgrey", "dodgerblue")
graph_1a <- function() {
plot(CO2 ~ horse, data = epadata,
col = plot_colors[type],
pch = as.numeric(type),
main = "CO2 vs Horse Power by Vehicle Type",
cex = 2)
legend("topright", levels(epadata$type),
col = plot_colors, pch = c(1, 2, 3))
}
graph_1a()
graph_1a()
cofs <- mod_1b$coefficients
intercept_both <- cofs[1]
intercept_car <- cofs[1] + cofs[3]
intercept_truck <- cofs[1] + cofs[4]
slope <- cofs[2]
abline(intercept_both, slope, col = plot_colors[1], lty = 1, lwd = 2)
abline(intercept_car, slope, col = plot_colors[2], lty = 2, lwd = 2)
abline(intercept_truck, slope, col = plot_colors[3], lty = 2, lwd = 2)
r_2 <- summary(mod_1b)$r.squared
graph_1a()
cofs <- mod_1c$coefficients
intercept_both <- cofs[1]
intercept_car <- cofs[1] + cofs[3]
intercept_truck <- cofs[1] + cofs[4]
slope_both <- cofs[2]
slope_car <- cofs[2] + cofs[5]
slope_truck <- cofs[2] + cofs[6]
abline(intercept_both, slope_both, col = plot_colors[1], lty = 1, lwd = 2)
abline(intercept_car, slope_car, col = plot_colors[2], lty = 2, lwd = 2)
abline(intercept_truck, slope_truck, col = plot_colors[3], lty = 2, lwd = 2)
r_2 <- summary(mod_1c)$r.squared
hosp <- read_csv("./hospital.csv")
str(hosp)
is.factor(hosp$Education)
is.factor(hosp$Income)
is.factor(hosp$Sex)
hosp <- read_csv("./hospital.csv")
str(hosp)
is.factor(hosp$Education)
is.factor(hosp$Income)
is.factor(hosp$Sex)
hosp$Education <- as.factor(hosp$Education)
hosp$Income <- as.factor(hosp$Income)
hosp$Sex <- as.factor(hosp$Sex)
levels(hosp$Education)
levels(hosp$Income)
levels(hosp$Sex)
head(hosp)
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
lm(Blood ~ 0 + Age + Education + Income + Sex, data = hosp)
lm(Blood ~ 0 + Age + 0 +  Education + Income + Sex, data = hosp)
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
lm(Blood ~ 0 + Age + 0 +  Education + Income + Sex, data = hosp)
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
lm(Blood ~ 0 + Age + (Education + Income + Sex), data = hosp)
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
lm(Blood ~ 0 + Age + Education + Income + Sex, data = hosp)
lm(Blood ~ 0 + Age + (Education + Income + Sex), data = hosp)
lm(Blood ~ Age + Education + Income + Sex + 0, data = hosp)
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
lm(Blood ~ 0 + Age + (Education + Income + Sex), data = hosp)
levels(hosp$Education)
levels(hosp$Income)
levels(hosp$Sex)
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
options(scipen = 1, digits = 2)
# Chunk 3
mtcars
# Chunk 4
plot(mpg ~ hp, data = mtcars, cex = 2)
# Chunk 5
plot(mpg ~ hp, data = mtcars,
col = am + 1,
pch = am + 1,
cex = 2)
legend("topright", c("Automatic", "Manual"),
col = c(1, 2), pch = c(1, 2))
# Chunk 6
(mpg_hp_slr <- lm(mpg ~ hp, data = mtcars))
# Chunk 7
plot(mpg ~ hp, data = mtcars,
col = am + 1,
pch = am + 1,
main = "Underestimating Manual, Overestimating Automatic",
cex = 2)
abline(mpg_hp_slr, lwd = 3, col = "gray")
legend("topright", c("Automatic", "Manual"),
col = c(1, 2), pch = c(1, 2))
# Chunk 8
mtcars$am
# Chunk 9
(mpg_hp_add <- lm(mpg ~ hp + am, data = mtcars))
# Chunk 10
(int_auto <- mpg_hp_add$coef[1])
# beta_0 establishes a baseline from which we add the other intercept
# beta_2
(int_manu <- mpg_hp_add$coef[1] + mpg_hp_add$coef[3])
# both lines have the same slope
(slope <- mpg_hp_add$coef[2])
# Chunk 11
plot(mpg ~ hp, data = mtcars,
col = am + 1,
pch = am + 1,
cex = 2)
abline(int_auto, slope, col = 1, lty = 1, lwd = 2)
abline(int_manu, slope, col = 2, lty = 2, lwd = 2)
# The line obtained from the model is the same as the base one
# when x2=0
#abline(mpg_hp_add, col = 3, lty = 2, lwd = 2)
legend("topright", c("Automatic", "Manual"),
col = c(1, 2), pch = c(1, 2))
# Chunk 12
summary(mpg_hp_add)$coef["am", ]
# Chunk 13
anova(mpg_hp_slr, mpg_hp_add)
# Chunk 14
autompg <- read.table(
"http://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data",
quote = "\"",
comment.char = "",
stringsAsFactors = FALSE
)
#give headers
colnames(autompg) <- c("mpg","cyl","disp","hp","wt","acc","year","origin","name")
# remove missing data marked as ?
autompg <- subset(autompg, autompg$hp != "?")
# remove a record that has issues
autompg <- subset(autompg, autompg$name != "plymouth reliant")
# give the dataset row names, based on the engine, year and name
rownames(autompg) <- paste(autompg$cyl, "cylinder", autompg$year, autompg$name)
# remove the name and origin columns
autompg <- subset(autompg, select = c("mpg","cyl","disp","hp","wt","acc","year", "origin"))
# change horsepower to numeric
autompg$hp <- as.numeric(autompg$hp)
# create a dummy variable for origin
autompg$domestic <- as.numeric(autompg$origin == 1)
# Remove 3 and 4 cyl cars
autompg <- autompg[autompg$cyl != 3, ]
autompg <- autompg[autompg$cyl != 5, ]
unique(autompg$cyl)
autompg$cyl <- as.factor(autompg$cyl)
str(autompg)
# Chunk 15
tibble::as_tibble(autompg)
# Chunk 16
(add_mod_dummy <- lm(mpg ~ disp + domestic, data = autompg))
(int_foreign <- add_mod_dummy$coef[1])
(int_domestic <- add_mod_dummy$coef[1] + add_mod_dummy$coef[3])
# both lines have the same slope
(slope <- add_mod_dummy$coef[2])
plot(mpg ~ disp, data = autompg,
col = domestic + 1,
pch = domestic + 1,
cex = 2)
abline(int_foreign, slope, col = 1, lty = 1, lwd = 2)
abline(int_domestic, slope, col = 2, lty = 2, lwd = 2)
# The line obtained from the model is the same as the base one
# when x2=0
#abline(mpg_hp_add, col = 3, lty = 2, lwd = 2)
legend("topright", c("foreign", "domestic"),
col = c(1, 2), pch = c(1, 2))
# Chunk 17
autompg$origin <- ifelse(autompg$domestic == 1, "domestic", "foreign")
is.factor(autompg$origin)
autompg$origin <- as.factor(autompg$origin)
is.factor(autompg$origin)
# Chunk 18
levels(autompg$origin)
as.numeric(autompg$origin)
# Chunk 19
(add_mod_factor <- lm(mpg ~ disp + origin, data = autompg))
# Chunk 20
predict(add_mod_dummy, data.frame(disp = 150, domestic = 1))
# Chunk 21
predict(add_mod_factor, data.frame(disp = 150, origin = "domestic"))
# Chunk 22
all.equal(add_mod_dummy$fitted.values, add_mod_factor$fitted.values)
# Chunk 23
predict(add_mod_dummy, data.frame(disp = 150, domestic = 3.14))
# Chunk 25
is.factor(autompg$cyl)
levels(autompg$cyl)
(mpg_disp_add_cyl <- lm(mpg ~ disp + cyl, data = autompg))
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
(mod_2c <- lm(Blood ~ Education + Income + Age:Sex, data = hosp))
(mod_2c <- lm(Blood ~ Age + Education + Income + Age:Sex, data = hosp))
(mod_2c <- lm(Blood ~ Age + Education + Income + Age:Sex + Income:Sex, data = hosp))
(mod_2b <- lm(Blood ~ Age + Education + Income + Sex, data = hosp))
(mod_2c <- lm(Blood ~ Age + Education + Income + Sex + Age:Sex + Income:Sex, data = hosp))
lm(Blood ~ Age + Education + Income + Sex + Age:Sex + Income:Sex, data = hosp)
(mod_2c <- lm(Blood ~ Age + Education + Income + Sex + Age:Sex + Income:Sex, data = hosp))
lm(Blood ~ Age + Education + Income + Age:Sex + Income:Sex, data = hosp)
anova_2c <- anova(mod_2b, mod_2c)
anova_2c
(mod_2c <- lm(Blood ~ Age + Education + Income + Sex + Age:Sex + Income:Sex, data = hosp))
anova_2c <- anova(mod_2b, mod_2c)
stat_decide(anova_2c[2, "Pr(>F)"], alpha = 0.1)
lm(Blood ~ Age + Education + Income + Sex + Age*Sex + Income*Sex, data = hosp)
(mod_2c <- lm(Blood ~ Age + Education + Income + Sex + Age:Sex + Income:Sex, data = hosp))
(mod_2c <- lm(Blood ~ Age + Education + Income + Sex + Age*Sex + Income*Sex, data = hosp))
anova_2c <- anova(mod_2b, mod_2c)
anova_2c
stat_decide(anova_2c[2, "Pr(>F)"], alpha = 0.1)
(mod_2c <- lm(Blood ~ Age + Education + Income + Sex + Age:Sex + Income:Sex, data = hosp))
anova_2c <- anova(mod_2b, mod_2c)
anova_2c
stat_decide(anova_2c[2, "Pr(>F)"], alpha = 0.1)
(mod_2c <- lm(Blood ~ Age + Education + Income + Sex + Age:Sex + Income:Sex, data = hosp))
anova_2c <- anova(mod_2b, mod_2c)
stat_decide(anova_2c[2, "Pr(>F)"], alpha = 0.1)
(mod_2d <- lm(Blood ~ Age + Education + Income + Sex
+ Age:Sex + Income:Sex + Age:Income + Age:Income:Sex, data = hosp))
(mod_2d <- lm(Blood ~ Age + Education + Income + Sex + Age:Income:Sex, data = hosp))
(mod_2d <- lm(Blood ~ Age + Education + Income + Sex + Age*Income*Sex, data = hosp))
(mod_2d <- lm(Blood ~ Age + Education + Income + Sex
+ Age:Sex + Income:Sex + Age:Income + Age:Income:Sex, data = hosp))
(mod_2d <- lm(Blood ~ Education + (Age + Income + Sex) ^ 3, data = hosp))
(mod_2d <- lm(Blood ~ Age + Education + Income + Sex + Age*Income*Sex, data = hosp))
(mod_2d <- lm(Blood ~ Education + Age + Income + Sex + Age*Income*Sex, data = hosp))
(mod_2d <- lm(Blood ~ Education + (Age + Income + Sex) ^ 3, data = hosp))
anova_2d <- anova(mod_2b, mod_2d)
anova_2d
stat_decide(anova_2d[2, "Pr(>F)"], alpha = 0.1)
levels(hosp$Education)
levels(hosp$Income)
levels(hosp$Sex)
coefs <- mod_2d$coefficients
coefs
coefs <- mod_2d$coefficients
mean_blood_change <- coefs["Age"] + coefs["Age:Incomelow"] +
coefs["Age:Sexmale"] + coefs["Age:Incomelow:Sexmale"]
mean_blood_change
coefs <- mod_2d$coefficients
mean_blood_change <- coefs["Age"] + coefs["Age:Incomelow"] +
coefs["Age:Sexmale"] + coefs["Age:Incomelow:Sexmale"]
coefs <- mod_2d$coefficients
(mean_blood_change <- coefs["Age"] + coefs["Age:Incomelow"] +
coefs["Age:Sexmale"] + coefs["Age:Incomelow:Sexmale"])
coefs <- mod_2d$coefficients
(mean_blood_change <- unname(coefs["Age"] + coefs["Age:Incomelow"] +
coefs["Age:Sexmale"] + coefs["Age:Incomelow:Sexmale"]))
hosp <- read_csv("./hospital.csv")
str(hosp)
head(hosp)
(days_add <- lm(Days ~ Pressure + Blood + Rate, data = hospital))
(days_int <- lm(Days ~ Pressure * Blood * Rate, data = hospital))
hospital <- read_csv("./hospital.csv")
str(hospital)
head(hospital)
(days_add <- lm(Days ~ Pressure + Blood + Rate, data = hospital))
(days_int <- lm(Days ~ Pressure * Blood * Rate, data = hospital))
(days_int <- lm(Days ~ Pressure * Blood * Rate, data = hospital))
(days_int <- lm(Days ~ Pressure:Blood:Rate, data = hospital))
(days_add <- lm(Days ~ Pressure + Blood + Rate, data = hospital))
(days_int <- lm(Days ~ Pressure * Blood * Rate, data = hospital))
(days_int <- lm(Days ~ Pressure * Blood * Rate, data = hospital))
(days_int <- lm(Days ~ 0 + Pressure * Blood * Rate, data = hospital))
-0.3339376 - -0.8111426
(days_add <- lm(Days ~ Pressure + Blood + Rate, data = hospital))
(days_int <- lm(Days ~ Pressure * Blood * Rate, data = hospital))
anova_3a <- anova(days_add, days_int)
anova_3a
anova_3a <- anova(days_add, days_int)
f_val <- anova_3a[2, "F"]
(p_val <- anova_3a[2, "0.087"])
(p_val <- anova_3a[2, "Pr(>F)"])
(f_val <- anova_3a[2, "F"])
(stat_decide(p_val, alpha = 0.1))
(days_add <- lm(Days ~ Blood + Pressure + Rate, data = hospital))
(days_int <- lm(Days ~ Blood * Pressure * Rate, data = hospital))
coefs <- days_int$coefficients
coefs
beta_h_3 <- coefs["Rate"]
beta_h_5 <- coefs["Blood:Rate"]
beta_h_6 <- coefs["Pressure:Rate"]
beta_h_7 <- coefs["Blood:Pressure:Rate"]
beta_h_7
beta_h_6
beta_h_5
beta_h_3
x_1 <- 10
x_2 <- 139
coefs <- days_int$coefficients
x_1 <- 10
x_2 <- 139
beta_h_3 <- coefs["Rate"]
beta_h_5 <- coefs["Blood:Rate"]
beta_h_6 <- coefs["Pressure:Rate"]
(days_increase <- beta_h_3 + beta_h_5*x_1 + beta_h_6*x_2 + beta_h_7*x_1*x_2)
(days_increase <- beta_h_3 + (beta_h_5*x_1) + beta_h_6*x_2 + beta_h_7*x_1*x_2)
n = 30
sim_data = data.frame(
groups = c(rep("A", n / 2), rep("B", n / 2)),
values = rep(0, n))
str(sim_data)
rep("A", n / 2)
num_sims = 300
lm_t = rep(0, num_sims)
lm_p = rep(0, num_sims)
tt_t = rep(0, num_sims)
tt_p = rep(0, num_sims)
set.seed(20)
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
summary(lm(values ~ groups, data = sim_data))
t.test(values ~ groups, data = sim_data, var.equal = TRUE)
summary(lm(values ~ groups, data = sim_data))$cief
summary(lm(values ~ groups, data = sim_data))$coef
?t.test
t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
summary(tt)
names(tt)
tt$alternative
tt$statistic
tt$p.value
n = 30
sim_data = data.frame(
groups = c(rep("A", n / 2), rep("B", n / 2)),
values = rep(0, n))
str(sim_data)
num_sims = 300
lm_t = rep(0, num_sims)
lm_p = rep(0, num_sims)
tt_t = rep(0, num_sims)
tt_p = rep(0, num_sims)
set.seed(19820426)
for(i in 1:num_sims) {
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
lmsumm <- summary(lm(values ~ groups, data = sim_data))
lm_t[i] <- lmsumm$coef[2, "t value"]
lm_p[i] <- lmsumm$coef[2, "Pr(>|t|)"]
t_test <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt_t[i] <- t_test$statistic
tt_p[i] <- t_test$p.value
}
mean(lm_t == tt_t)
lm_t
num_sims = 10
lm_t = rep(0, num_sims)
lm_p = rep(0, num_sims)
tt_t = rep(0, num_sims)
tt_p = rep(0, num_sims)
set.seed(19820426)
for(i in 1:num_sims) {
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
lmsumm <- summary(lm(values ~ groups, data = sim_data))
lm_t[i] <- lmsumm$coef[2, "t value"]
lm_p[i] <- lmsumm$coef[2, "Pr(>|t|)"]
t_test <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt_t[i] <- t_test$statistic
tt_p[i] <- t_test$p.value
print(paste(tt_t[i], ",", tt_p[i]))
}
set.seed(19820426)
for(i in 1:num_sims) {
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
lmsumm <- summary(lm(values ~ groups, data = sim_data))
lm_t[i] <- lmsumm$coef[2, "t value"]
lm_p[i] <- lmsumm$coef[2, "Pr(>|t|)"]
print(paste(lm_t[i], ",", lm_p[i]))
t_test <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt_t[i] <- t_test$statistic
tt_p[i] <- t_test$p.value
print(paste(tt_t[i], ",", tt_p[i]))
}
set.seed(19820426)
for(i in 1:num_sims) {
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
lmsumm <- summary(lm(values ~ groups, data = sim_data))
lm_t[i] <- lmsumm$coef[2, "t value"]
lm_p[i] <- lmsumm$coef[2, "Pr(>|t|)"]
t_test <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt_t[i] <- t_test$statistic
tt_p[i] <- t_test$p.value
print(paste(lm_t[i], ",", tt_t[i]))
#print(paste(lm_p[i], ",", tt_p[i]))
}
set.seed(20)
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
summary(lm(values ~ groups, data = sim_data))
t.test(values ~ groups, data = sim_data, var.equal = TRUE)
set.seed(19820426)
for(i in 1:num_sims) {
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
lmsumm <- summary(lm(values ~ groups, data = sim_data))
lm_t[i] <- lmsumm$coef[2, "t value"]
lm_p[i] <- lmsumm$coef[2, "Pr(>|t|)"]
t_test <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt_t[i] <- t_test$statistic
tt_p[i] <- t_test$p.value
print(paste(lm_t[i], ",", tt_t[i]))
print(paste(lm_p[i], ",", tt_p[i]))
}
set.seed(19820426)
for(i in 1:num_sims) {
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
lmsumm <- summary(lm(values ~ groups, data = sim_data))
lm_t[i] <- lmsumm$coef[2, "t value"]
lm_p[i] <- lmsumm$coef[2, "Pr(>|t|)"]
t_test <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt_t[i] <- t_test$statistic
tt_p[i] <- t_test$p.value
#print(paste(lm_t[i], ",", tt_t[i]))
print(paste(lm_p[i], ",", tt_p[i]))
}
mean(lm_t == tt_t)
mean(lm_t == tt_t)
mean(lm_p == tt_p)
all.equal(lm_p, tt_p)
c(lm_t, tt_t)
cbind(lm_t, tt_t)
cbind(lm_t, tt_t)[5, ]
cbind(lm_t, tt_t)[1:5, ]
num_sims = 10
lm_t = rep(0, num_sims)
lm_p = rep(0, num_sims)
tt_t = rep(0, num_sims)
tt_p = rep(0, num_sims)
num_sims = 300
lm_t = rep(0, num_sims)
lm_p = rep(0, num_sims)
tt_t = rep(0, num_sims)
tt_p = rep(0, num_sims)
set.seed(19820426)
for(i in 1:num_sims) {
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
lmsumm <- summary(lm(values ~ groups, data = sim_data))
lm_t[i] <- lmsumm$coef[2, "t value"]
lm_p[i] <- lmsumm$coef[2, "Pr(>|t|)"]
t_test <- t.test(values ~ groups, data = sim_data, var.equal = TRUE)
tt_t[i] <- t_test$statistic
tt_p[i] <- t_test$p.value
#print(paste(lm_t[i], ",", tt_t[i]))
#print(paste(lm_p[i], ",", tt_p[i]))
}
mean(lm_p == tt_p)
all.equal(lm_p, tt_p)
n = 30
sim_data = data.frame(
groups = c(rep("A", n / 2), rep("B", n / 2)),
values = rep(0, n))
str(sim_data)
set.seed(20)
sim_data$values = rnorm(n, mean = 42, sd = 3.5) # simulate response data
summary(lm(values ~ groups, data = sim_data))
t.test(values ~ groups, data = sim_data, var.equal = TRUE)
cbind(lm_t, tt_t)[1:5, ]
40.92198+ 0.02897
