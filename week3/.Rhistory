lower_95 <- sim_stats$beta_1_hats - margin
upper_95 <- sim_stats$beta_1_hats + margin
lower_95[1:10]
upper_95[1:10]
upper_95[1:10] - lower_95[1:10]
c(lower_95[1:10], upper_95[1:10])
length(lower_95)
# model parameters
beta_0 <- 5
beta_1 <- 2
sigma <- 3
sim_stats <- loop_simulation(x, beta_0, beta_1, num_simulations = 2500, sigma = sigma)
Sxx <- sum((x - mean(x)) ^ 2)
crit <- qt(0.025, df = n - 2, lower.tail = FALSE)
margin <- crit * sim_stats$beta_1_hats_se
lower_95 <- sim_stats$beta_1_hats - margin
upper_95 <- sim_stats$beta_1_hats + margin
# Let's take a look to some
lower_95[1:10]
upper_95[1:10]
len <- length(lower_95)
beta > lower_95[1:10]
beta_1 > lower_95[1:10]
beta_1 < upper_95[1:10]
beta_1 < upper_95[1:50]
beta_1 > lower_95[1:50]
beta_1 > lower_95[1:50] & beta_1 < upper_95[1:50]
sum(beta_1 > lower_95[1:50] & beta_1 < upper_95[1:50])
sum(beta_1 > lower_95 & beta_1 < upper_95)
(proportion <- sum(beta_1 > lower_95 & beta_1 < upper_95) / len)
len <- length(lower_95)
beta_1_in_count <- sum(beta_1 > lower_95 & beta_1 < upper_95)
(proportion <- beta_1_in_count / len)
beta_1
beta_10_in_count <- sum(0 > lower_95 & 0 < upper_95)
beta_10_in_count
beta_10_in_count <- sum(0 > lower_95 & 0 < upper_95)
(proportion_0 <- beta_10_in_count / len)
beta_10_out_count <- len - sum(0 > lower_95 & 0 < upper_95)
beta_10_out_count
1655 + 845
beta_10_out_count <- len - sum(0 > lower_95 & 0 < upper_95)
(proportion_0 <- beta_10_out_count / len)
crit <- qt(0.005, df = n - 2, lower.tail = FALSE)
margin <- crit * sim_stats$beta_1_hats_se
lower_99 <- sim_stats$beta_1_hats - margin
upper_99 <- sim_stats$beta_1_hats + margin
# Let's take a look to some
lower_99[1:10]
# Let's take a look to some
lower_99[1:10]
upper_99[1:10]
len <- length(lower_99)
beta_1_in_count <- sum(beta_1 > lower_99 & beta_1 < upper_99)
(proportion <- beta_1_in_count / len)
crit <- qt(0.005, df = n - 2, lower.tail = FALSE)
margin <- crit * sim_stats$beta_1_hats_se
lower_99 <- sim_stats$beta_1_hats - margin
upper_99 <- sim_stats$beta_1_hats + margin
len <- length(lower_99)
beta_1_in_count <- sum(beta_1 > lower_99 & beta_1 < upper_99)
(proportion <- beta_1_in_count / len)
len <- length(lower_99)
beta_1_in_count <- sum(beta_1 > lower_99 & beta_1 < upper_99)
(proportion <- beta_1_in_count / len)
beta_1_in_count
beta_10_out_count <- len - sum(0 > lower_99 & 0 < upper_99)
beta_10_out_count
(proportion_0 <- beta_10_out_count / len)
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
calc_pred_int <- function(model, newdata, level = 0.95) {
}
calc_pred_int <- function(model, newdata, level = 0.95) {
predict(model, newdata = newdata)
}
calc_pred_int(cat_model, newcat_1)
summary(cat_model)
names(cat_model)
cat_model$xlevels
length(cat_model$fitted.values)
nrow(cats)
df <- length(cat_model$fitted.values) - 2
?qt
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
summary(cat_model)
(12.83018 + 18.729) / 2
model <- cat_model
newdata <- newcat_1
level <- 0.95
estimate <- predict(model, newdata = newdata)
estimate
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
names(estimate)
newcat_1 - estimate
newcat_1
1 - 15.77959
sigma <- sqrt(sum((newcat_1 - estimate)^2)
/ (length(model$fitted.values) - 2))
sigma
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (length(model$fitted.values) - 2))
s_e
names(cat_model)
names(cat_model)$model
cat_model$model
cat_model$model$Bwt
mean(cat_model$model$Bwt)
cat_model
summary(cat_model)
names(summary(cat_model))
mean(cat_model$model$Bwt)
x_mean <- mean(cat_model$model$Bwt)
Sxx <- sum((cats$Bwt - mean(cats$Bwt)) ^ 2)
x_mean <- mean(cat_model$model$Bwt)
Sxx <- sum((cats$Bwt - mean(cats$Bwt)) ^ 2)
#s_e <- sqrt(sum((newcat_1 - estimate)^2)
#     / (length(model$fitted.values) - 2))
s_e <- summary(stop_dist_model)$sigma
margin <- crit * s_err
lower <- estimate - margin
margin <- crit * s_err
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
lower
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
model <- cat_model
newdata <- newcat_1
level <- 0.95
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
df <- n - 2
crit <- qt((1 - level) / 2, df = df, lower.tail = FALSE)
x_mean <- mean(cat_model$model$Bwt)
Sxx <- sum((cats$Bwt - mean(cats$Bwt)) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
lower
estimate
x_mean <- mean(cat_model$model$Bwt)
Sxx <- sum((newcat_1 - mean(cats$Bwt)) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
lower
x_mean <- mean(cat_model$model$Bwt)
Sxx <- sum((newcat_1 - x_mean) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
lower
lower <- unname(estimate - margin)
lower
5
lower <- unname(estimate - margin)[1]
lower
x_mean
x_mean <- sum(cat_model$model$Bwt) + newcat_1
x_mean
x_mean / n
x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / n
Sxx <- sum((newcat_1 - x_mean) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
#x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
x_mean <- mean(cat_model$model$Bwt)
Sxx <- sum((newcat_1 - x_mean) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
x_mean
x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
x_mean
x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
#x_mean <- mean(cat_model$model$Bwt)
Sxx <- sum((newcat_1 - x_mean) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
s_e
s_e * sqrt(1 + 1/n)
#x_mean <- mean(cat_model$model$Bwt)
#Sxx <- sum((newcat_1 - x_mean) ^ 2)
Sxx <- sum((c(cat_model$model$Bwt, newcat_1) - x_mean) ^ 2)
#x_mean <- mean(cat_model$model$Bwt)
#Sxx <- sum((newcat_1 - x_mean) ^ 2)
Sxx <- sum((c(cat_model$model$Bwt, newcat_1[1]) - x_mean) ^ 2)
#x_mean <- mean(cat_model$model$Bwt)
#Sxx <- sum((newcat_1 - x_mean) ^ 2)
Sxx <- sum((c(cat_model$model$Bwt, unname(newcat_1)) - x_mean) ^ 2)
cat_model$model$Bwt
c(cat_model$model$Bwt, 4.0)
newcat_1[1, 1]
newcat_1[, 1]
c(cat_model$model$Bwt, newcat_1[, 1])
mean(c(cat_model$model$Bwt, newcat_1[, 1]))
x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
x_mean
x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
#x_mean <- mean(cat_model$model$Bwt)
#Sxx <- sum((newcat_1 - x_mean) ^ 2)
Sxx <- sum((c(cat_model$model$Bwt, newcat_1[, 1]) - x_mean) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newcat_1 - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
#x_mean <- mean(cat_model$model$Bwt)
#Sxx <- sum((newcat_1 - x_mean) ^ 2)
Sxx <- sum((c(cat_model$model$Bwt, newcat_1[, 1]) - x_mean) ^ 2)
s_e <- sqrt(sum((newcat_1 - estimate)^2)
/ (n - 2))
## Adding new data to old
new_preds <- c(cat_model$model$Bwt, newcat_1[, 1])
new_reps <- c(cat_model$fitted.values, estimate)
nrows(model$fitted.values)
length(model$fitted.values)
length(new_preds)
length(new_resps)
new_reps <- c(cat_model$fitted.values, estimate)
length(new_resps)
new_resps <- c(cat_model$fitted.values, estimate)
length(new_resps)
#x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
x_mean <- mean(new_preds)
x_mean
mean(cat_model$model$Bwt)
## Adding new data to old
new_preds <- c(cat_model$model$Bwt, newcat_1[, 1])
new_resps <- c(cat_model$fitted.values, estimate)
#x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
x_mean <- mean(new_preds)
#Sxx <- sum((newcat_1 - x_mean) ^ 2)
Sxx <- sum((new_preds - x_mean) ^ 2)
s_e <- sqrt(sum((new_preds - new_resps)^2)
/ (n - 2))
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
df <- n - 2
crit <- qt((1 - level) / 2, df = df, lower.tail = FALSE)
## Adding new data to old
new_preds <- c(cat_model$model$Bwt, newcat_1[, 1])
new_resps <- c(cat_model$fitted.values, estimate)
#x_mean <- (sum(cat_model$model$Bwt) + newcat_1) / (n+1)
x_mean <- mean(new_preds)
#Sxx <- sum((newcat_1 - x_mean) ^ 2)
Sxx <- sum((new_preds - x_mean) ^ 2)
s_e <- sqrt(sum((new_preds - new_resps)^2)
/ (n - 2))
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((new_preds - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
s_err
s_e
#s_e <- summary(stop_dist_model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((estimate - x_mean)^2) / Sxx)
s_err
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
crit
model$terms
model
summary(model)
?summary(model)
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
df <- n - 2
crit <- qt((1 - level) / 2, df = df, lower.tail = FALSE)
x_mean <- mean(model$model$Bwt)
Sxx <- sum((model$model$Bwt - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((estimate - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- unname(estimate - margin)
lower
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
x_mean <- mean(model$model['Bwt']])
x_mean <- mean(model$model[, 'Bwt']])
model$model
model$model[, 'Bwt']
x_mean <- mean(model$model[, 'Bwt'])
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
df <- n - 2
crit <- qt((1 - level) / 2, df = df, lower.tail = FALSE)
x_mean <- mean(model$model[, 'Bwt'])
Sxx <- sum((model$model[, 'Bwt'] - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
lower
names(model)
names(effects)
names(rank)
names(assign())
names(assign
model$rank
model$rank
model$qr
model$effects
names(model)
model$rank
model$assign
model$df.residual
length(model$fitted.values)
length(model$fitted.values)
model$xlevels
model$call
model$terms
model$terms.attr(,"term.labels")
model$term.labels
model$terms
model$terms[,"term.labels"]
model$terms[1]
model$terms[1, 1]
model$terms[, 1]
model$terms[1]
names(model$model)
names(model$model)[1]
names(model$model)[2]
mean(model)
x_mean <- mean(model$model[, names(model$model)[2]])
x_mean
x_mean <- mean(model$model[, names(model$model)[2]])
Sxx <- sum((model$model[, 'Bwt'] - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
names(newdata)
x_mean <- mean(model$model[, names(newdata)])
x_mean
x_mean <- mean(model$model[, names(newdata)])
Sxx <- sum((model$model[, names(newdata)] - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
lower
upper <- estimate + margin
upper
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
calc_pred_int <- function(model, newdata, level = 0.95) {
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
crit <- qt((1 - level) / 2, df = model$df.residual, lower.tail = FALSE)
x_mean <- mean(model$model[, names(newdata)])
Sxx <- sum((model$model[, names(newdata)] - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
upper <- estimate + margin
pred_int <- c(estimate, lower, upper)
names(pred_int) <- c("estimate", "lower", "upper")
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
calc_pred_int <- function(model, newdata, level = 0.95) {
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
crit <- qt((1 - level) / 2, df = model$df.residual, lower.tail = FALSE)
x_mean <- mean(model$model[, names(newdata)])
Sxx <- sum((model$model[, names(newdata)] - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
upper <- estimate + margin
pred_int <- c(estimate, lower, upper)
names(pred_int) <- c("estimate", "lower", "upper")
pred_int
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
calc_pred_int <- function(model, newdata, level = 0.95) {
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
crit <- qt((1 - level) / 2, df = model$df.residual, lower.tail = FALSE)
x_mean <- mean(model$model[, names(newdata)])
Sxx <- sum((model$model[, names(newdata)] - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
upper <- estimate + margin
pred_int <- c(estimate, lower, upper)
names(pred_int) <- c("estimate", "lower", "upper")
pred_int
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
predict(cat_model, newdata = newcat_1,
interval = c("prediction"), level = 0.95)
calc_pred_int <- function(model, newdata, level = 0.95) {
estimate <- predict(model, newdata = newdata)
n <- length(model$fitted.values)
crit <- qt((1 - level) / 2, df = model$df.residual, lower.tail = FALSE)
x_mean <- mean(model$model[, names(newdata)])
Sxx <- sum((model$model[, names(newdata)] - x_mean) ^ 2)
s_e <- summary(model)$sigma
s_err <- s_e * sqrt(1 + 1/n + ((newdata[, 1] - x_mean)^2) / Sxx)
margin <- crit * s_err
lower <- estimate - margin
upper <- estimate + margin
pred_int <- c(estimate, lower, upper)
names(pred_int) <- c("estimate", "lower", "upper")
pred_int
}
newcat_1 = data.frame(Bwt = 4.0)
calc_pred_int(cat_model, newcat_1)
newcat_2 = data.frame(Bwt = 3.3)
calc_pred_int(cat_model, newcat_2, level = 0.90)
predict(cat_model, newdata = newcat_2,
interval = c("prediction"), level = 0.90)
beta_0 <- 5
beta_1 <- 0
sigma <- 3
sim_stats <- loop_simulation(x, beta_0, beta_1, num_simulations = 2500, sigma = sigma)
birthday = 19820426
set.seed(birthday)
n = 25
x = seq(0, 2.5, length = n)
beta_0 <- 5
beta_1 <- 0
sigma <- 3
sim_stats <- loop_simulation(x, beta_0, beta_1, num_simulations = 2500, sigma = sigma)
Sxx <- sum((x - mean(x)) ^ 2)
crit <- qt(0.025, df = n - 2, lower.tail = FALSE)
margin <- crit * sim_stats$beta_1_hats_se
lower_95 <- sim_stats$beta_1_hats - margin
upper_95 <- sim_stats$beta_1_hats + margin
birthday = 19820426
set.seed(birthday)
n = 25
x = seq(0, 2.5, length = n)
beta_0 <- 5
beta_1 <- 0
sigma <- 3
sim_stats <- loop_simulation(x, beta_0, beta_1, num_simulations = 2500, sigma = sigma)
Sxx <- sum((x - mean(x)) ^ 2)
crit <- qt(0.005, df = n - 2, lower.tail = FALSE)
margin <- crit * sim_stats$beta_1_hats_se
lower_99 <- sim_stats$beta_1_hats - margin
upper_99 <- sim_stats$beta_1_hats + margin
birthday = 19820426
set.seed(birthday)
n = 25
x = seq(0, 2.5, length = n)
beta_0 <- 5
beta_1 <- 0
sigma <- 3
sim_stats <- loop_simulation(x, beta_0, beta_1, num_simulations = 2500, sigma = sigma)
Sxx <- sum((x - mean(x)) ^ 2)
crit <- qt(0.005, df = n - 2, lower.tail = FALSE)
margin <- crit * sim_stats$beta_1_hats_se
lower_99 <- sim_stats$beta_1_hats - margin
upper_99 <- sim_stats$beta_1_hats + margin
len <- length(lower_99)
beta_1_in_count <- sum(beta_1 > lower_99 & beta_1 < upper_99)
(proportion <- beta_1_in_count / len)
sim_stats$beta_1_hats
sim_stats$beta_1_hats > 1.2
sum(sim_stats$beta_1_hats > 1.2)
sum(abs(sim_stats$beta_1_hats) > 1.2)
pnorm(0, mean = sim_stats$beta_1_hats, sd = sd(sim_stats$beta_1_hats))
pnorm(0, mean = mean(sim_stats$beta_1_hats), sd = sd(sim_stats$beta_1_hats))
1 - pnorm(0, mean = mean(sim_stats$beta_1_hats), sd = sd(sim_stats$beta_1_hats))
